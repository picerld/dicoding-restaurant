// Mocks generated by Mockito 5.4.6 from annotations
// in restaurant_app/test/restaurant_provider_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;

import 'package:mockito/mockito.dart' as _i1;
import 'package:restaurant_app/data/api_service.dart' as _i5;
import 'package:restaurant_app/data/model/restaurant.dart' as _i2;
import 'package:restaurant_app/data/model/restaurant_detail.dart' as _i3;
import 'package:restaurant_app/data/model/review_response.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class
// ignore_for_file: invalid_use_of_internal_member

class _FakeRestaurantResult_0 extends _i1.SmartFake
    implements _i2.RestaurantResult {
  _FakeRestaurantResult_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeRestaurantDetailResponse_1 extends _i1.SmartFake
    implements _i3.RestaurantDetailResponse {
  _FakeRestaurantDetailResponse_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeReviewResponse_2 extends _i1.SmartFake
    implements _i4.ReviewResponse {
  _FakeReviewResponse_2(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [ApiService].
///
/// See the documentation for Mockito's code generation for more information.
class MockApiService extends _i1.Mock implements _i5.ApiService {
  MockApiService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<_i2.RestaurantResult> listRestaurants() =>
      (super.noSuchMethod(
            Invocation.method(#listRestaurants, []),
            returnValue: _i6.Future<_i2.RestaurantResult>.value(
              _FakeRestaurantResult_0(
                this,
                Invocation.method(#listRestaurants, []),
              ),
            ),
          )
          as _i6.Future<_i2.RestaurantResult>);

  @override
  _i6.Future<_i3.RestaurantDetailResponse> restaurantDetail(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#restaurantDetail, [id]),
            returnValue: _i6.Future<_i3.RestaurantDetailResponse>.value(
              _FakeRestaurantDetailResponse_1(
                this,
                Invocation.method(#restaurantDetail, [id]),
              ),
            ),
          )
          as _i6.Future<_i3.RestaurantDetailResponse>);

  @override
  _i6.Future<_i2.RestaurantResult> searchRestaurants(String? query) =>
      (super.noSuchMethod(
            Invocation.method(#searchRestaurants, [query]),
            returnValue: _i6.Future<_i2.RestaurantResult>.value(
              _FakeRestaurantResult_0(
                this,
                Invocation.method(#searchRestaurants, [query]),
              ),
            ),
          )
          as _i6.Future<_i2.RestaurantResult>);

  @override
  _i6.Future<_i4.ReviewResponse> addReview(
    String? id,
    String? name,
    String? review,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#addReview, [id, name, review]),
            returnValue: _i6.Future<_i4.ReviewResponse>.value(
              _FakeReviewResponse_2(
                this,
                Invocation.method(#addReview, [id, name, review]),
              ),
            ),
          )
          as _i6.Future<_i4.ReviewResponse>);
}
